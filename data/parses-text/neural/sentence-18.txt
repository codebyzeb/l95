Document: ID=sentence-18.txt (1 sentences, 56 tokens)

Sentence #1 (56 tokens):
The slightly simplified version of the Viterbi algorithm that we present takes as input a single HMM and a sequence of observed words O = (o1, o2, ...oT ) and returns the most probable state/tag sequence Q = (q1, q2, qT ) together with its probability.

Tokens:
[Text=The CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=DT]
[Text=slightly CharacterOffsetBegin=4 CharacterOffsetEnd=12 PartOfSpeech=RB]
[Text=simplified CharacterOffsetBegin=13 CharacterOffsetEnd=23 PartOfSpeech=VBN]
[Text=version CharacterOffsetBegin=24 CharacterOffsetEnd=31 PartOfSpeech=NN]
[Text=of CharacterOffsetBegin=32 CharacterOffsetEnd=34 PartOfSpeech=IN]
[Text=the CharacterOffsetBegin=35 CharacterOffsetEnd=38 PartOfSpeech=DT]
[Text=Viterbi CharacterOffsetBegin=39 CharacterOffsetEnd=46 PartOfSpeech=NNP]
[Text=algorithm CharacterOffsetBegin=47 CharacterOffsetEnd=56 PartOfSpeech=NN]
[Text=that CharacterOffsetBegin=57 CharacterOffsetEnd=61 PartOfSpeech=WDT]
[Text=we CharacterOffsetBegin=62 CharacterOffsetEnd=64 PartOfSpeech=PRP]
[Text=present CharacterOffsetBegin=65 CharacterOffsetEnd=72 PartOfSpeech=VBP]
[Text=takes CharacterOffsetBegin=73 CharacterOffsetEnd=78 PartOfSpeech=VBZ]
[Text=as CharacterOffsetBegin=79 CharacterOffsetEnd=81 PartOfSpeech=IN]
[Text=input CharacterOffsetBegin=82 CharacterOffsetEnd=87 PartOfSpeech=NN]
[Text=a CharacterOffsetBegin=88 CharacterOffsetEnd=89 PartOfSpeech=DT]
[Text=single CharacterOffsetBegin=90 CharacterOffsetEnd=96 PartOfSpeech=JJ]
[Text=HMM CharacterOffsetBegin=97 CharacterOffsetEnd=100 PartOfSpeech=NN]
[Text=and CharacterOffsetBegin=101 CharacterOffsetEnd=104 PartOfSpeech=CC]
[Text=a CharacterOffsetBegin=105 CharacterOffsetEnd=106 PartOfSpeech=DT]
[Text=sequence CharacterOffsetBegin=107 CharacterOffsetEnd=115 PartOfSpeech=NN]
[Text=of CharacterOffsetBegin=116 CharacterOffsetEnd=118 PartOfSpeech=IN]
[Text=observed CharacterOffsetBegin=119 CharacterOffsetEnd=127 PartOfSpeech=VBN]
[Text=words CharacterOffsetBegin=128 CharacterOffsetEnd=133 PartOfSpeech=NNS]
[Text=O CharacterOffsetBegin=134 CharacterOffsetEnd=135 PartOfSpeech=NN]
[Text== CharacterOffsetBegin=136 CharacterOffsetEnd=137 PartOfSpeech=SYM]
[Text=( CharacterOffsetBegin=138 CharacterOffsetEnd=139 PartOfSpeech=-LRB-]
[Text=o1 CharacterOffsetBegin=139 CharacterOffsetEnd=141 PartOfSpeech=NN]
[Text=, CharacterOffsetBegin=141 CharacterOffsetEnd=142 PartOfSpeech=,]
[Text=o2 CharacterOffsetBegin=143 CharacterOffsetEnd=145 PartOfSpeech=NN]
[Text=, CharacterOffsetBegin=145 CharacterOffsetEnd=146 PartOfSpeech=,]
[Text=... CharacterOffsetBegin=147 CharacterOffsetEnd=150 PartOfSpeech=:]
[Text=oT CharacterOffsetBegin=150 CharacterOffsetEnd=152 PartOfSpeech=NN]
[Text=) CharacterOffsetBegin=153 CharacterOffsetEnd=154 PartOfSpeech=-RRB-]
[Text=and CharacterOffsetBegin=155 CharacterOffsetEnd=158 PartOfSpeech=CC]
[Text=returns CharacterOffsetBegin=159 CharacterOffsetEnd=166 PartOfSpeech=VBZ]
[Text=the CharacterOffsetBegin=167 CharacterOffsetEnd=170 PartOfSpeech=DT]
[Text=most CharacterOffsetBegin=171 CharacterOffsetEnd=175 PartOfSpeech=RBS]
[Text=probable CharacterOffsetBegin=176 CharacterOffsetEnd=184 PartOfSpeech=JJ]
[Text=state CharacterOffsetBegin=185 CharacterOffsetEnd=190 PartOfSpeech=NN]
[Text=/ CharacterOffsetBegin=190 CharacterOffsetEnd=191 PartOfSpeech=HYPH]
[Text=tag CharacterOffsetBegin=191 CharacterOffsetEnd=194 PartOfSpeech=NN]
[Text=sequence CharacterOffsetBegin=195 CharacterOffsetEnd=203 PartOfSpeech=NN]
[Text=Q CharacterOffsetBegin=204 CharacterOffsetEnd=205 PartOfSpeech=NN]
[Text== CharacterOffsetBegin=206 CharacterOffsetEnd=207 PartOfSpeech=SYM]
[Text=( CharacterOffsetBegin=208 CharacterOffsetEnd=209 PartOfSpeech=-LRB-]
[Text=q1 CharacterOffsetBegin=209 CharacterOffsetEnd=211 PartOfSpeech=NN]
[Text=, CharacterOffsetBegin=211 CharacterOffsetEnd=212 PartOfSpeech=,]
[Text=q2 CharacterOffsetBegin=213 CharacterOffsetEnd=215 PartOfSpeech=NN]
[Text=, CharacterOffsetBegin=215 CharacterOffsetEnd=216 PartOfSpeech=,]
[Text=qT CharacterOffsetBegin=217 CharacterOffsetEnd=219 PartOfSpeech=NN]
[Text=) CharacterOffsetBegin=220 CharacterOffsetEnd=221 PartOfSpeech=-RRB-]
[Text=together CharacterOffsetBegin=222 CharacterOffsetEnd=230 PartOfSpeech=RB]
[Text=with CharacterOffsetBegin=231 CharacterOffsetEnd=235 PartOfSpeech=IN]
[Text=its CharacterOffsetBegin=236 CharacterOffsetEnd=239 PartOfSpeech=PRP$]
[Text=probability CharacterOffsetBegin=240 CharacterOffsetEnd=251 PartOfSpeech=NN]
[Text=. CharacterOffsetBegin=251 CharacterOffsetEnd=252 PartOfSpeech=.]

Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, version-4)
det(version-4, The-1)
advmod(simplified-3, slightly-2)
amod(version-4, simplified-3)
case(algorithm-8, of-5)
det(algorithm-8, the-6)
compound(algorithm-8, Viterbi-7)
nmod:of(version-4, algorithm-8)
obj(present-11, algorithm-8)
ref(algorithm-8, that-9)
nsubj(present-11, we-10)
acl:relcl(algorithm-8, present-11)
obj(present-11, takes-12)
case(HMM-17, as-13)
dep(HMM-17, input-14)
det(HMM-17, a-15)
amod(HMM-17, single-16)
obl:as(present-11, HMM-17)
cc(sequence-20, and-18)
det(sequence-20, a-19)
obl:as(present-11, sequence-20)
conj:and(HMM-17, sequence-20)
acl(sequence-20, of-21)
dep(of-21, observed-22)
obj(observed-22, words-23)
nsubj(o1-27, O-24)
dep(o1-27, =-25)
punct(o1-27, (-26)
dep(words-23, o1-27)
punct(o1-27, ,-28)
conj(o1-27, o2-29)
punct(o1-27, ,-30)
punct(o1-27, ...-31)
dep(o1-27, oT-32)
punct(o1-27, )-33)
cc(returns-35, and-34)
obj(observed-22, returns-35)
conj:and(words-23, returns-35)
obj(returns-35, the-36)
advmod(probable-38, most-37)
amod(the-36, probable-38)
compound(tag-41, state-39)
punct(tag-41, /-40)
compound(Q-43, tag-41)
compound(Q-43, sequence-42)
nsubj(q1-46, Q-43)
dep(q1-46, =-44)
punct(q1-46, (-45)
dep(probable-38, q1-46)
punct(q1-46, ,-47)
conj(q1-46, q2-48)
punct(q1-46, ,-49)
dep(q1-46, qT-50)
punct(q1-46, )-51)
case(probability-55, together-52)
fixed(together-52, with-53)
nmod:poss(probability-55, its-54)
obl:together_with(q1-46, probability-55)
punct(version-4, .-56)
